# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# It's not necessary to copy all keys to your config.
# If the key is missing in your config, "default-config.toml" will serve as a fallback

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
  # Start a single daemon instance first that will receive config updates from all the others
  "exec-and-forget zsh -c 'borders width=6.0 blacklist=iPhone\\ Mirroring'",
  "exec-and-forget sleep 1; dark-notify | xargs -I % zsh -c \"[[ % == 'light' ]] && borders active_color=0xffff0000 inactive_color=0xff494d64 || borders active_color=0xff0000ff inactive_color=0xff494d64\""
]

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 16

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']
on-focus-changed = [
  'exec-and-forget [ $(aerospace list-windows --workspace focused --count) -eq 1 ] && zsh -c "borders width=0.0" || zsh -c "borders width=6.0"',
  'move-mouse window-lazy-center'  # Mouse lazily follows any focus (window or workspace)
]

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 4
inner.vertical =   4
outer.left =       0
outer.bottom =     0
outer.top =        0
outer.right =      0

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
[mode.main.binding]
cmd-h = [] # Disable "hide application"
cmd-alt-h = [] # Disable "hide others"

# TODO: Consider setting up a separate mode for resize/swap
# https://github.com/nikitabobko/AeroSpace/issues/406 / https://github.com/nikitabobko/AeroSpace/issues/406

alt-enter = '''
    exec-and-forget pgrep -x "Ghostty" > /dev/null || open -a Ghostty && osascript -e 'tell application "System Events" to tell application process "Ghostty" to click menu item "New Window" of menu "File" of menu bar 1'
'''

alt-shift-enter = '''exec-and-forget pgrep -x Arc && osascript -e '
tell application "System Events"
  tell process "Arc"
    click menu item "New Little Arc Window" of menu 1 of menu bar item "File" of menu bar 1
  end tell
end tell' || osascript -e '
tell application "Safari"
    make new document at end of documents
    activate
end tell'
'''

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-slash = 'layout tiles horizontal vertical'
alt-comma = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-h = 'focus left --boundaries all-monitors-outer-frame'
alt-j = 'focus down --boundaries all-monitors-outer-frame'
alt-k = 'focus up --boundaries all-monitors-outer-frame'
alt-l = 'focus right --boundaries all-monitors-outer-frame'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
# TODO: Move across monitors
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-shift-minus = 'resize smart -50'
alt-shift-equal = 'resize smart +50'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
# Only alt +left hand keys
alt-a = 'workspace A' # In your config, you can drop workspace bindings that you don't need
alt-b = 'workspace B'
alt-c = 'workspace C'
alt-d = 'workspace D'
alt-f = 'workspace F'
alt-g = 'workspace G'
alt-p = 'workspace P'
alt-q = 'workspace Q'
alt-r = 'workspace R'
alt-s = 'workspace S'
alt-t = 'workspace T'
alt-v = 'workspace V'
alt-w = 'workspace W'
alt-x = 'workspace X'
alt-z = 'workspace Z'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-shift-a = ['move-node-to-workspace A', 'workspace A']
alt-shift-b = ['move-node-to-workspace B', 'workspace B']
alt-shift-c = ['move-node-to-workspace C', 'workspace C']
alt-shift-d = ['move-node-to-workspace D', 'workspace D']
alt-shift-f = ['move-node-to-workspace F', 'workspace F']
alt-shift-g = ['move-node-to-workspace G', 'workspace G']
alt-shift-p = ['move-node-to-workspace P', 'workspace P']
alt-shift-q = ['move-node-to-workspace Q', 'workspace Q']
alt-shift-r = ['move-node-to-workspace R', 'workspace R']
alt-shift-s = ['move-node-to-workspace S', 'workspace S']
alt-shift-t = ['move-node-to-workspace T', 'workspace T']
alt-shift-v = ['move-node-to-workspace V', 'workspace V']
alt-shift-w = ['move-node-to-workspace W', 'workspace W']
alt-shift-x = ['move-node-to-workspace X', 'workspace X']
alt-shift-z = ['move-node-to-workspace Z', 'workspace Z']

cmd-alt-ctrl-h = ['join-with left']
cmd-alt-ctrl-j = ['join-with down']
cmd-alt-ctrl-k = ['join-with up']
cmd-alt-ctrl-l = ['join-with right']

cmd-alt-ctrl-f = ['fullscreen']
cmd-alt-ctrl-shift-f = ['macos-native-fullscreen']
cmd-alt-ctrl-t = ['layout floating tiling']

# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-tab = 'move-workspace-to-monitor --wrap-around next'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-semicolon = 'mode service'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
#s = ['layout sticky tiling', 'mode main'] # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']

alt-shift-h = ['join-with left', 'mode main']
alt-shift-j = ['join-with down', 'mode main']
alt-shift-k = ['join-with up', 'mode main']
alt-shift-l = ['join-with right', 'mode main']

[[on-window-detected]]
if.app-id = 'com.apple.systempreferences'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.grailr.CARROT-Weather'
if.window-title-regex-substring = 'Mini Window'
run = ['layout floating']

# [S]afari
[[on-window-detected]]
if.app-id = 'com.apple.Safari'
if.during-aerospace-startup = true
run = ['move-node-to-workspace S']

[[on-window-detected]]
if.app-id = 'company.thebrowser.Browser'
if.during-aerospace-startup = true
run = ['move-node-to-workspace S']

# [C]hat
[[on-window-detected]]
if.app-id = 'com.apple.MobileSMS'
run = ['move-node-to-workspace C']

[[on-window-detected]]
if.app-id = 'ru.keepcoder.Telegram'
run = ['move-node-to-workspace C']

# [D]
[[on-window-detected]]
if.app-id = 'com.tinyspeck.slackmacgap'
run = ['move-node-to-workspace D']

# [P]roductivity
[[on-window-detected]]
if.app-id = 'md.obsidian'
run = ['move-node-to-workspace P']

[[on-window-detected]]
if.app-id = 'com.culturedcode.ThingsMac'
run = ['move-node-to-workspace P']

# [G]roupware
[[on-window-detected]]
if.app-id = 'com.apple.mail'
run = ['move-node-to-workspace G']

[[on-window-detected]]
if.app-id = 'com.flexibits.fantastical2.mac'
run = ['move-node-to-workspace G']

[[on-window-detected]]
if.app-id = 'com.busymac.busycal3'
run = ['move-node-to-workspace G']

# [T]erminal
[[on-window-detected]]
if.app-id = 'com.github.wez.wezterm'
if.during-aerospace-startup = true
run = ['move-node-to-workspace T']

# [V]ideo chat
[[on-window-detected]]
if.app-id = 'com.amazon.Amazon-Chime'
run = ['move-node-to-workspace V']

[workspace-to-monitor-force-assignment]
S = [".*LEN.*", ".*Acer.*"]
T = [".*LEN.*", ".*Acer.*"]
