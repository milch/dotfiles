set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",xterm-256color:RGB"
set-environment -g PATH "/run/current-system/sw/bin:/opt/homebrew/bin:$PATH"

# https://github.com/tmux/tmux/issues/3379#issuecomment-1306379301
set -g default-command /run/current-system/sw/bin/fish
set-option -g default-shell /bin/zsh

set-option -gas terminal-overrides "*:Tc" # true color support
set-option -gas terminal-overrides "*:RGB" # true color support
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

set-option -g detach-on-destroy off

set-option -g status-position top

# Adjust scrollback history
set-option -g history-limit 50000

# Clear scrollback
bind k send-keys C-l

# Set prefix to Ctrl+a
unbind C-b
set -g prefix C-a

# Close without confirming
bind x kill-pane

# Move pane to new window
bind T break-pane

# # VI mode
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-selection

# Mouse support 
setw -g mouse on

# Enable focus reporting
set -g focus-events on

# Split tmux windows with current directory in the active pane
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

bind-key g popup -d "#{pane_current_path}" -xC -yC -w90% -h90% -E "TERM=xterm-256color lazygit"
bind-key b popup -d "#{pane_current_path}" -xC -yC -w65% -h65% -EE "darwin-rebuild switch --flake $HOME/dotfiles"

# '@pane-is-vim' is a pane-local option that is set by the plugin on load,
# and unset when Neovim exits or suspends; note that this means you'll probably
# not want to lazy-load smart-splits.nvim, as the variable won't be set until
# the plugin is loaded

# Smart pane switching with awareness of Neovim splits.
bind-key -n C-h if -F "#{@pane-is-vim}" 'send-keys C-h'  'select-pane -L'
bind-key -n C-j if -F "#{@pane-is-vim}" 'send-keys C-j'  'select-pane -D'
bind-key -n C-k if -F "#{@pane-is-vim}" 'send-keys C-k'  'select-pane -U'
bind-key -n C-l if -F "#{@pane-is-vim}" 'send-keys C-l'  'select-pane -R'

# Alternatively, if you want to disable wrapping when moving in non-neovim panes, use these bindings
# bind-key -n C-h if -F '#{@pane-is-vim}' { send-keys C-h } { if -F '#{pane_at_left}'   '' 'select-pane -L' }
# bind-key -n C-j if -F '#{@pane-is-vim}' { send-keys C-j } { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
# bind-key -n C-k if -F '#{@pane-is-vim}' { send-keys C-k } { if -F '#{pane_at_top}'    '' 'select-pane -U' }
# bind-key -n C-l if -F '#{@pane-is-vim}' { send-keys C-l } { if -F '#{pane_at_right}'  '' 'select-pane -R' }

# Smart pane resizing with awareness of Neovim splits.
bind-key -n M-h if -F "#{@pane-is-vim}" 'send-keys M-h' 'resize-pane -L 3'
bind-key -n M-j if -F "#{@pane-is-vim}" 'send-keys M-j' 'resize-pane -D 3'
bind-key -n M-k if -F "#{@pane-is-vim}" 'send-keys M-k' 'resize-pane -U 3'
bind-key -n M-l if -F "#{@pane-is-vim}" 'send-keys M-l' 'resize-pane -R 3'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if -F \"#{@pane-is-vim}\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if -F \"#{@pane-is-vim}\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Plugins
## Plugin Manager
set -g @plugin 'tmux-plugins/tpm'
## Sensible defaults
set -g @plugin 'tmux-plugins/tmux-sensible'
## Make tmux work with macOS clipboard
set -g @plugin 'tmux-plugins/tmux-yank'
## Colorscheme
set -g @plugin 'catppuccin/tmux'
## Switch dark/light mode
set -g @plugin 'erikw/tmux-dark-notify'
## Session picker/creator
set -g @plugin '27medkamal/tmux-session-wizard'
## Quickly open URLs
set -g @plugin 'wfxr/tmux-fzf-url'
## Resurrect tmux sessions after server restarts
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

set -g @continuum-restore 'on'

set -g @catppuccin_window_status_style "rounded"
# leave this unset to let applications set the window title
set -g @catppuccin_window_text " #W"
set -g @catppuccin_window_current_text " #W"
set -g @catppuccin_window_flags "icon"
set -g @catppuccin_window_current_number_color "#{@thm_blue}"

set -g @catppuccin_status_connect_separator "no"
set -g @catppuccin_status_background "default"
set -g @catppuccin_status_left_separator ""
set -g @catppuccin_status_right_separator " "

set -g @dark-notify-theme-path-light "$HOME/.config/tmux/catppuccin-latte.conf"
set -g @dark-notify-theme-path-dark "$HOME/.config/tmux/catppuccin-macchiato.conf"

set -g @session-wizard 't'

# Load local config, if available
if-shell "test -e $HOME/.config/tmux/local.conf" \
    "source-file $HOME/.config/tmux/local.conf"

if-shell "test -e ~/.local/state/tmux/tmux-dark-notify-theme.conf" \
     "source-file ~/.local/state/tmux/tmux-dark-notify-theme.conf"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.config/tmux/plugins/tpm/tpm'
