" Incompatible to vi
set nocompatible
filetype off

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

Bundle 'gmarik/vundle'

"Language support
Bundle 'markschabacker/cocoa.vim.git'
Bundle 'othree/html5.vim.git'
Bundle 'nono/vim-handlebars'
Bundle 'jimenezrick/vimerl'

"Search, Navigation, etc.
Bundle 'majutsushi/tagbar'
Bundle 'kien/ctrlp.vim.git'
Bundle 'mileszs/ack.vim'
Bundle "rking/ag.vim"

"Aesthetics
Bundle 'skwp/vim-colors-solarized.git'
Bundle 'bling/vim-airline'

"SCM
Bundle 'mhinz/vim-signify'
Bundle 'tpope/vim-fugitive.git'

"Autocomplete, Snippets, Syntax
Bundle 'Valloric/YouCompleteMe'
Bundle 'Raimondi/delimitMate'
Bundle 'SirVer/ultisnips'
Bundle "scrooloose/syntastic"

"Misc
Bundle 'sickill/vim-pasta.git'
Bundle 'tsaleh/vim-matchit.git'
Bundle 'kshenoy/vim-signature'
Bundle 'tpope/vim-dispatch'


" How many lines of history VIM remembers
set history=1000

" Enables syntax highlighting
syntax on

" Enable plugins based on filetype
filetype plugin indent on

" Solarized all the way
set background=dark
colorscheme solarized

let mapleader = ","

" Tab doesn't expand, Tab-Size is 4 spaces
set softtabstop=4
set shiftwidth=4

" Smart indentation of lines
set smartindent

" Enables Statusbar
set laststatus=2

" Highlight searches
set hlsearch
" No idea, 'makes search act like modern browsers'
set incsearch

" For regular expressions
set magic

" Show matching brackets
set showmatch

" No error sounds
set noerrorbells
set novisualbell
set t_vb=
set tm=500

" Ignore case when searching, but not if keywords are capitalized
set ignorecase smartcase

" Turn off backups
set nobackup
set nowb
set noswapfile

" Allows Backspace to loop over everything
set backspace=indent,eol,start

" No Arrow keys
map <Left> <Nop>
map <Right> <Nop>
map <Up> <Nop>
map <Down> <Nop>

" Viewport will move if Cursor is 10 lines away from the edge
set so=10

" Show current position
set ruler

set showcmd

" Height of the command bar
set cmdheight=1

" Automatically reload file when it is changed from the outside
set autoread

" Set default encoding to utf-8
set encoding=utf8

" Change split with Ctrl+Direction
map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l

set rnu "relative line numbers

set guioptions-=T "No top toolbar
set guioptions-=r "no right scrollbar
set guioptions-=L "no left scrollbar

set completeopt=menu,menuone,longest

nmap <leader>l :TagbarToggle<CR>
nnoremap <leader>h <Esc>:call ToggleHardMode()<CR>

let g:airline_powerline_fonts=1
let g:airline_theme='powerlineish'

let g:ctrlp_map='<leader>p'
let g:ctlp_cmd='CtrlP'

function! g:UltiSnips_Complete()
    call UltiSnips_ExpandSnippet()
    if g:ulti_expand_res == 0
	if pumvisible()
	    return "\<C-n>"
	else
	    call UltiSnips_JumpForwards()
	    if g:ulti_jump_forwards_res == 0
		return "\<TAB>"
	    endif
	endif
    endif
    return ""
endfunction

au BufEnter * exec "inoremap <silent> " . g:UltiSnipsExpandTrigger . " <C-R>=g:UltiSnips_Complete()<cr>"

let g:UltiSnipsJumpForwardTrigger="<tab>"

let g:signify_sign_weight = "NONE"
let g:signify_sign_color_inherit_from_linenr = 1
let g:signify_sign_change = "~"
let g:signify_sign_change_delete = "~_"

let g:ycm_confirm_extra_conf = 0
